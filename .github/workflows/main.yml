name: Publish And Deploy Demo
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 下载源码
      - name: Checkout
        uses: actions/checkout@v3

      # 打包构建
      - name: Build
        uses: actions/setup-node@master
      - run: npm install
      - run: npm run build
      - run: ls
      - run: tar -zcvf release.tgz dist

      # 发布 Release
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release.tgz,dist/*" # 一组可选的路径，表示要上传到版本的产出文件。 这可能是单个路径或以逗号分隔的路径列表（或 globs）
          tag: ${{ github.ref }} # 发布的可选标签。 如果省略，将使用 git ref （如果它是标签）。
          name: Release ${{ github.ref }} # 版本的可选名称。 如果省略，将使用标签。
          body: TODO New Release. #  body发布的可选主体
          generateReleaseNotes: true # 指示是否应自动生成发行说明。
          draft: false # 可选择将此版本标记为草稿版本。 设置为 true 以启用。
          prerelease: false # 可选择将此版本标记为预发布。 设置为 true 以启用。
          allowUpdates: true # allowUpdates 一个可选标志，表示如果版本已经存在，我们是否应该更新它。默认值为 false。
          token: ${{ secrets.TOKEN }}
      # 上传构建结果到 Release
      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./release.tgz
      #     asset_name: release.tgz
      #     asset_content_type: application/x-tgz

      # 部署到服务器
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /root/dev
            wget https://github.com/smilecamo/astro/releases/latest/download/release.tgz -O release.tgz
            tar zxvf release.tgz
