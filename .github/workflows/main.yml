name: Publish and Deploy Astro App

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Package app
        run: tar -zcvf release.tgz dist

      - name: Get latest release tag
        id: get_latest_release
        uses: actions/github-script@v3
        with:
          script: |
            const { data } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1 // only need the latest release
            });
            if (data.length === 0) {
              return "v0.1.0"; // default version if no releases yet
            }
            return data[0].tag_name;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Increment version number
        id: increment_version
        run: |
          VERSION=${{ steps.get_latest_release.outputs.result }}
          VERSION_NUMBER=$(echo "${VERSION}" | cut -c 2-)
          IFS='.' read -ra PARTS <<< "$VERSION_NUMBER"
          MAJOR="${PARTS[0]}"
          MINOR="${PARTS[1]}"
          PATCH="${PARTS[2]}"
          NEXT_PATCH=$((PATCH+1))
          echo "NEXT_VERSION=v${MAJOR}.${MINOR}.${NEXT_PATCH}" >> $GITHUB_ENV

      - name: Create new release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEXT_VERSION }}
          release_name: Release ${{ env.NEXT_VERSION }}
          body: |
            Changes:
            - ...
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        id: upload_release_assets
        uses: actions/upload-artifact@v2
        with:
          name: release-assets
          path: |
            dist/
            release.tgz

      - name: Deploy app to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /root/astro/
            wget https://github.com/smilecamo/astro/releases/latest/download/release.tgz -O release.tgz
            tar zxvf release.tgz
